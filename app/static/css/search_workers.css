/* Main container for the search section */
.search-container {
    position: relative;
    height: 500px;
    background-image: url('/static/images/background1.jpg');
    background-size: cover;
    background-position: center;
    transition: background-image 0.5s ease-in-out;
    margin-bottom: 2rem;
    border-radius: 8px; /* Adding rounded corners */
    overflow: hidden; /* Ensure overlay and background cover the container */
}

/* Overlay to darken the background image */
.search-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
}

/* Container for search title and form */
.search-content {
    position: relative;
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: white;
    text-align: center;
}

.search-content h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
}

/* Search form container */
.search-form {
    width: 80%;
    max-width: 800px;
}

/* Container for search input fields and button */
.search-inputs {
    display: flex;
    gap: 10px;
}

.search-inputs .form-control {
    flex: 1;
    height: 50px;
    border: none;
    border-radius: 4px;
    background-color: rgba(255, 255, 255, 0.9); /* Slightly transparent white */
    color: #333; /* Dark text color for visibility */
    padding: 0 15px; /* Add padding for better readability */
}

.search-inputs .form-control::placeholder {
    color: #666; /* Placeholder text color */
}

/* Search button styling */
.search-btn {
    height: 50px;
    padding: 0 20px;
    background-color: #c65b2c; /* More vibrant color for the button */
    border: none;
    border-radius: 4px;
    color: white;
    font-weight: bold;
    transition: background-color 0.3s ease;
}

.search-btn:hover {
    background-color: #e67935; /* Darker shade on hover */
}

/* Indicators for background image slider */
.search-indicators {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
}

.indicator {
    width: 10px;
    height: 10px;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
}

.indicator.active {
    background-color: white;
}

/* Centered headings for results section */
.text-center {
    text-align: center;
}

/* Worker list container */
.worker-list {
    margin-top: 2rem;
}

/* Individual worker item */
.worker-item {
    display: flex;
    align-items: center;
    padding: 1rem;
    border: 1px solid var(--border-color);
    margin-bottom: 1rem;
    background-color: white;
    border-radius: 8px; /* Rounded corners for worker items */
    transition: transform 0.3s, box-shadow 0.3s; /* Smooth hover effect */
}

.worker-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
}

.worker-image {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    margin-right: 1rem;
    object-fit: cover;
}

.worker-info {
    flex-grow: 1;
}

.worker-name {
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 0.25rem;
}

.worker-description {
    color: var(--secondary-color);
    margin-bottom: 0.25rem;
}

.worker-location {
    display: flex;
    align-items: center;
    color: var(--secondary-color);
    font-size: 0.9rem;
}

.worker-location i {
    margin-right: 0.5rem;
    color: var(--primary-color);
}

.worker-rating {
    display: flex;
    align-items: center;
    margin-left: auto;
}

.rating-stars {
    color: var(--rating-color);
    margin-right: 0.5rem;
}

.review-count {
    color: var(--secondary-color);
    font-size: 0.9rem;
}

.worker-category {
    background-color: var(--primary-color);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
    margin-left: 1rem;
}

.worker-posted {
    color: var(--secondary-color);
    font-size: 0.8rem;
    margin-left: 1rem;
}

/* Remove underline on hover for worker item links */
.worker-item-link {
    text-decoration: none; /* Remove underline */
    color: inherit; /* Inherit the text color */
}

.worker-item-link:hover {
    text-decoration: none; /* Ensure underline is not added on hover */
    color: inherit; /* Maintain the text color on hover */
}
